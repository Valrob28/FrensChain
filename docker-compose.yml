version: '3.8'

services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: frenschain
      POSTGRES_USER: frenschain
      POSTGRES_PASSWORD: frenschain_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U frenschain"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis pour le cache et les sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://frenschain:frenschain_password@postgres:5432/frenschain
      - REDIS_URL=redis://redis:6379
      - PORT=3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads
    restart: unless-stopped

  # Frontend (pour le développement)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - EXPO_PUBLIC_API_URL=http://localhost:3001
      - EXPO_PUBLIC_SOLANA_NETWORK=devnet
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
